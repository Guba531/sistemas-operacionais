/* Cores divertidas que as crianças adoram! */
:root {
    /* Cores base */
    --cor-principal: #4b7bec;    /* Azul brilhante */
    --cor-secundaria: #26de81;   /* Verde alegre */
    --cor-destaque: #fd9644;     /* Laranja vibrante */
    --cor-fundo: #f7f1e3;        /* Bege claro para não cansar os olhos */
    --cor-texto: #2d3436;        /* Cinza escuro para leitura fácil */
    --cor-titulo: #6c5ce7;       /* Roxo para títulos */
    --cor-link: #e84393;         /* Rosa para links */
    /* Cores para gradientes */
    --green-yellow: #ADFF2F;     /* Uma cor verde-amarelada vibrante */
    --moonstone: #3AA8C1;        /* Um azul esverdeado bonito */
/* Gradientes padronizados - criamos variáveis para manter consistência visual no site */
    /* Gradiente principal - vai do verde-amarelo para azul, em ângulo de 135 graus */
    --gradient-primary: linear-gradient(135deg, var(--green-yellow), var(--moonstone));
    /* Gradiente invertido - mesmas cores mas em ordem oposta */
    --gradient-primary-reverse: linear-gradient(135deg, var(--moonstone), var(--green-yellow));
    /* Gradiente para animação - tem 4 pontos de cor para transição
suave na animação */
--gradient-animated: linear-gradient(135deg,
        var(--green-yellow),
        var(--moonstone),
        var(--green-yellow),
        var(--moonstone));
}

body {
    font-family: 'Comic Sans MS', 'Chalkboard SE', sans-serif;
    line-height: 1.6;
    margin: 0;
    background-color: var(--cor-fundo);
    color: var(--cor-texto);
    background-image: url('images/fundo.avif');
    animation: flutuando 60s infinite linear;
}

h1, h2, h3 {
    color: var(--cor-titulo);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
    border-bottom: 3px dashed var(--cor-destaque);
    padding-bottom: 10px;
    font-family: 'Mochy Pop One', 'Comic Sans MS', cursive;
}

h1 {
    font-size: 2.5em;
    text-align: center;
    background: var(--gradient-primary);
    padding: 20px;
    border-radius: 20px;
    margin-top: 0;
    text-shadow: 3px 3px 0px rgba(0,0,0,0.3), 
                 6px 6px 0px rgba(0,0,0,0.1);
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    border: 4px solid white;
    letter-spacing: 2px;
    position: relative;
    overflow: hidden;
    transform: rotate(-1deg); /* Inclina um pouquinho como um desenho animado */
    z-index: 1;
}

.h1:before {
    content:"" ;
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: rgba(255,255,255,0.1);
    transform: rotate(30deg);
    animation: shineEffect 4s infinite linear;
    z-index:-1;
}

h2 {
    background-color: var(--cor-secundaria);
    color: white;
    padding:15px;
    border-radius:15px;
    text-align:center;
    border: none;
    box-shadow:0 4px 8px rgba(0,0,0,0.2);
    margin-bottom: 20px;
    position: relative;
    text-shadow:2px 2px 0px rgba(0,0,0,0.2);
    transform: rotate(-1deg);
    transition: transform 0.3s;
}

/* Efeito quando passa o mouse sobre o subtítulo */
nav h2:hover {
    transform: scale(1.03) rotate(0deg);
}

nav h2:before {
    left: 15px;
}

nav h2:after {
    right: 15px;
}

header {
    background: var(--gradient-primary);
    padding: 20px;
    border-bottom: 10px solid var(--cor-secundaria);
    border-radius: 0 0 30px 30px;
    margin-bottom: 30px;
}

nav {
    background: var(--gradient-primary-reverse);
    border-radius: 15px;
    padding: 15px;
    margin: 20px 0;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

ul {
    list-style-type: none;
    padding: 0;
}

ul li {
    margin-bottom: 15px;
    background-color: white;
    padding: 10px 15px;
    border-radius: 10px;
    border-left: 6px solid var(--cor-destaque);
    box-shadow: 4px 4px 10px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
}

ul li:hover {
    transform: rotate(1deg) translateY(-5px);
    background-color: #fff8e8;
    border-left-color: var(--cor-principal) ;
}

a {
    color: var(--cor-link);
    text-decoration: none;
    font-weight: bold;
    transition: all 0.3s;
    position: relative;
}

a:hover {
    color: var(--cor-principal);
    text-decoration: underline wavy var(--cor-destaque);
}

img.mini-logo {
    vertical-align: middle;
    margin-right: 12px;
    border-radius: 50%; /* Faz ficar redondinho */
    border: 3px solid var(--cor-destaque);
    background: white;
    padding: 3px;
    transition: transform 0.3s;
}

img.mini-logo:hover {
    transform: rotate(360deg);
}

img.ilustracao, img.grafico {
    display: block;
    max-width: 100%;
    height: auto;
    margin: 25px auto;
    border-radius: 15px;
    border: 6px solid white;
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
    transition: transform 0.5s;
}

img.ilustracao:hover, img.grafico:hover {
    transform: scale(1.03);
}

figcaption {
    background: var(--gradient-primary-reverse);
    color: white;
    text-align: center;
    padding: 8px;
    border-radius: 0 0 15px 15px;
    font-style: italic;
    margin-top: -5px;
}

main {
    max-width: 1000px;
    margin: 20px auto;
    padding: 20px;
    background-color: rgba(255, 255, 255, 0.85);
    border-radius: 20px;
    box-shadow: 0 0 30px rgba(0,0,0,0.15);

}

section {   
    margin-bottom: 40px;
    padding: 20px;
    border-radius: 15px;
    background-color: rgba(255, 255, 255, 0.7);
    border: 2px solid var(--cor-secundaria);
}

/* Article é uma história completa, representa conteúdo relacionado,
 mas secundário ao conteúdo principal da página
*/
article {
    padding: 15px;
    background-color: white;
    border-radius: 15px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

aside {
    background-color: #ffe8d6;
    padding: 15px;
    border-radius: 15px;
    border: 3px dashed var(--cor-destaque);
    margin: 20px 0;
    box-shadow: 5px 5px 0px var(--cor-principal);
    transform: rotate(1deg);
}

aside h3 {
    color: var(--cor-destaque);
    text-align: center;
    margin-top: 0;
}

iframe {
    background: linear-gradient(135deg, var(--green-yellow) 0%, var(--moonstone) 100%);
    padding: 30px;
    margin-top: 40px;
    text-align: center;
    color: white;
    border-radius: 30px 30px 0 0;
    box-shadow: 0 -5px 15px rgba(0,0,0,0.2);
}

footer {
    background: linear-gradient(135deg, var(--green-yellow) 0%, var(--moonstone) 100%);
    padding: 30px;
    margin-top: 40px;
    text-align: center;
    border-radius: 30px 30px 0 0;
    box-shadow: 0 -5px 15px rgba(0, 0, 0, 0.2);
}

footer p {
    font-weight: bold;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
    margin-bottom: 20px;
    font-size: 1.1em;
}

.footer-nav ul {
    display: flex;
    justify-content: center;
    gap: 20px;
    flex-wrap: wrap;
    margin: 15px 0;
}
/*display: flex:
*   **O que faz:** Transforma um elemento contêiner em um **contêiner flexbox**.
*   **Resultado:** Os filhos diretos desse contêiner se tornam **itens flex** e podem ser organizados em uma linha ou coluna.
*   **Uso:** É a base para usar o layout flexbox, permitindo controlar o alinhamento,
* a direção e a distribuição do espaço entre os itens de forma eficiente, especialmente para layouts unidimensionais (linha ou coluna).

gap:
*   **O que faz:** Define o tamanho do espaço ("gap") entre as linhas e colunas em layouts flexbox ou grid.
*   **Sintaxe:** Pode ser usado como atalho para `row-gap` (espaço entre linhas) e `column-gap` (espaço entre colunas). Ex: `gap: 10px;` (10px entre linhas e colunas) ou `gap: 10px 20px;` (10px entre linhas, 20px entre colunas).
*   **Uso:** Simplifica a adição de espaço entre itens sem precisar usar margens nos próprios itens (o que pode causar problemas nas bordas).

flex-wrap
O que faz: Controla se os itens flex (os filhos diretos de um contêiner flex) devem quebrar para uma nova linha (ou coluna, dependendo da direção principal) quando não há espaço suficiente no contêiner flex.
Propósito: É fundamental para criar layouts responsivos que se adaptam a diferentes tamanhos de tela, evitando que os itens transbordem do contêiner.

nowrap (Valor padrão):
*   Os itens flex **não quebram**. Eles tentarão permanecer em uma única linha (ou coluna).
*   Se o espaço for insuficiente, os itens podem encolher (dependendo de outras propriedades como `flex-shrink`) ou transbordar (overflow) do contêiner.
wrap:
*   Os itens flex **quebram** para uma nova linha (ou coluna) se não houver espaço suficiente no contêiner.
*   As novas linhas (ou colunas) são adicionadas na direção da linha principal. principal for horizontal (linha), as novas linhas aparecerão acima da primeira. É menos comum que o `wrap`.
*/

.footer-nav a {
    color: white;
    background: linear-gradient(135deg, var(--cor-destaque) 0%, #ff6b35 100%);
    padding: 10px 18px;
    border-radius: 25px;
    font-weight: bold;
    box-shadow: 0 4px 0 rgba(0,0,0,0.2);
    transition: all 0.3s;
    border: 2px solid white;
    display: inline-block;
    min-width: 100px;
    text-align: center;
}
/*Um elemento com display: inline-block comporta-se como um elemento inline,
 ocupando apenas a largura necessária para o seu conteúdo e permitindo que vários
  elementos sejam colocados na mesma linha*/

.footer-nav a:hover {
    transform: translateY(-5px);
    box-shadow: 0px 9px 0 rgba(0, 0, 0, 0.2);
    background: linear-gradient(135deg, #ff6b35 0%, var(--cor-destaque) 100%);
}

.footer-nav ul li:first-child a {
    animation: pulseButton 2s infinite;
}

/* Os ícones de mídias sociais também com efeitos divertidos */
.social-media {
    margin-top: 25px;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 15px;
}

/* Cada ícone de mídia social */
.social-icon {
    margin: 5px;
    display: inline-block;
    background-color: white;
    padding: 12px 20px;
    border-radius: 30px;
    color: var(--cor-texto);
    transition: all 0.3s;
    min-width: 120px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
    font-weight: bold;
    border: 2px solid transparent;
}

/* Imagens dentro dos ícones sociais */
.social-icon img {
    vertical-align: middle;
    margin-right: 8px;
    transition: transform 0.3s;
}

/* Efeitos diferentes para cada mídia social */
.facebook:hover {
    background: linear-gradient(135deg, #4267B2 0%, #3b5998 100%);
    color: white;
    border-color: white;
}
.twitter:hover {
    background: linear-gradient(135deg, #000000 0%, rgb(62, 62, 62) 100%);
    color: white;
    border-color: white;
}

.instagram:hover {
    background: linear-gradient(45deg, #f09433 0%, #e6683c 25%, #dc2743 50%, #cc2366 75%, #bc1888 100%);
    color: white;
    border-color: white;
}

/* Efeito nos ícones quando passa o mouse */
.social-icon:hover img {
    transform: rotate(360deg) scale(1.2);
}

#topo {
    position: fixed;
    bottom: 30px;
    right: 30px;
    background: var(--gradient-primary);
    color: white;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    text-align: center;
    line-height: 50px;
    text-decoration: none;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    transition: all 0.3s;
    z-index: 1000;
}

#topo:hover {
    background: var(--gradient-primary-reverse);
    transform: scale(1.1) translateY(-5px);
}

/*Em CSS, @keyframes é uma regra que define as etapas de uma animação,
 indicando como um elemento se comporta em diferentes estágios da animação.*/

 @keyframes flutuando {
    from {
        background-position: 0 0;
    }
    to {
        background-position: 100% 100%;
    }
 }

 @keyframes gradientAnimation {
    from {
        background-position: 0% 50%;
    }
    to {
        background-position: 100 50;
    }
 }

 @keyframes shineEffect {
    0% {
        transform: translateX(-100%) rotate(30deg);
    }
    100% {
        transform: translateX(100%) rotate(30deg);
    }
 }

 @keyframes pulseButton {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
 }